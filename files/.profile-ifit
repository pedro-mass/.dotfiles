echo "loading profile-ifit..."

export WORK=~/dev/work
export WEBVIEW=$WORK/phoenix-webview
export API=$WORK/phoenix-api-service

# for ifit/ifit
export NODE_PATH="/Users/$username/dev/work/ifit"
# pyenv
eval "$(pyenv init -)"

alias cold-start="yarn && yarn start"
alias cs="cold-start"
alias cold-test="yarn && yarn test"
alias ct="cold-test"
review() {
  [ -z "$1" ] && BRANCH='test' || BRANCH=$1
  [ -z "$2" ] && COMMAND="git branches" || COMMAND="gcr $2"

  gco . && gco $1 && git sync && eval $COMMAND
}
alias rs="review test $1"
alias review-test="rs test $1"
alias rsm="review master $1"
alias review-master="rsm $1"

alias serveo="ssh -R 80:localhost:3000 serveo.net"
alias slack-dark="~/scripts/darkSlack.sh"
alias slack-light="~/scripts/darkSlack.sh --revert"

# code shortcuts
alias code-feed="code $WORK/full-stack-feed.code-workspace"
alias code-workouts="code $WORK/workouts/wolf-workouts.code-workspace"
alias code-scratch="code $WORK/scratchpad.code-workspace"

function viper-mongo {
  mongo \
    --host galactica.ifit-dev.com \
    --port $1 \
    --ssl \
    --sslCAFile ~/.ssh/mongodb.ca.cert.pem \
    --sslPEMKeyFile ~/.ssh/mongodb.viper-user.key-and-cert.pem
}

function viper-mongo-test {
  viper-mongo 60000
}

push-dev () {
  [ -z "$1" ] && B=$(git rev-parse --abbrev-ref HEAD) || B=$1
  echo "Branch found: $B"

  if [[ $B != "dev" ]]; then
    git checkout dev
    git reset --hard $B
    git push --force
    echo "Pushed '$B' to 'dev'!"
    git checkout $B
  else
    echo "Can't push dev to dev"
  fi
}

echo "loaded profile-ifit."

